config {
  type: "table",
  schema: "DWHLOAD",
  name: "TLDB1_TRANS_SAL",
  tags: ["scontrini"],
  description: "Questa tabella raggruppa tutti i campi ed opera le trasformazioni intermedie su di essi. In questa tabella sono aggiunte tramite un left join tutte le tabelle del tag scontrini. Lo step successivo riguardo le trasformazioni dei campi avviene nella TDWB1_TRANS_FULL_SAL",
   assertions: {
    uniqueKey: ["LDB1_ID_SCN_COD","LDB1_ID_RGH_COD"]
  }
}

SELECT
  TLDB1_INPUT.ID_SCN AS LDB1_ID_SCN_COD,
  TLDB1_INPUT.ID_RGH AS LDB1_ID_RGH_COD,
  --missing fmt
  CLIENTE_COD AS LDB1_CLIENTE_COD,
  733 AS LDB1_CLIE_DWH_COD,
  TLDB1_INPUT.NEGZ_COD AS LDB1_NEGZ_COD,
  TDWD1.DWD1_STRUT_COMM_COD AS LDB1_STRUT_COMM_COD,
  TDWD1.DWF1_AREA_GEO_DES AS LDB1_AREA_GEO_DES,
  TDWD1.DWF1_STATO_DES AS LDB1_STATO_DES,
  ${TIPO_ACQUISTO.tipoAcqs(ctx)} as LDB1_TIPO_ACQ_COD,
  ${TIPO_ACQUISTO.cauSconto1()} as LDB1_CAU_SCONTO1_RGH_COD,
  ${TIPO_ACQUISTO.cauSconto2()} as LDB1_CAU_SCONTO2_RGH_COD,
  ${TIPO_ACQUISTO.cauSconto3()} as LDB1_CAU_SCONTO3_RGH_COD,
  STATO_FATTURAZIONE AS LDB1_STATO_FATT_COD,
  CASE
    WHEN TLDB1_TIPO_SCN_BASE.TIPO_SCN IS NOT NULL THEN TLDB1_TIPO_SCN_BASE.TIPO_SCN
    WHEN TLDB1_TIPO_SCN_VEN_RES_SPE.TIPO_SCN IS NOT NULL THEN TLDB1_TIPO_SCN_VEN_RES_SPE.TIPO_SCN
    WHEN TLDB1_TIPO_SCN_SOS_MST.TIPO_SCN IS NOT NULL THEN TLDB1_TIPO_SCN_SOS_MST.TIPO_SCN
    ELSE NULL
  END AS LDB1_TIPO_SCN_COD,
  EMISSIONE_DTA AS LDB1_EMISSIONE_DTA,
  CASE
    WHEN TLDB1_INPUT.ID_SCN IN (
      SELECT
        ID_SCN_COD_ANNULLATO
      FROM
        ${ctx.ref("TLDB1_ANNULLATI")}
    ) THEN CONCAT("Z", CAU_RSO_RGH_COD)
    ELSE CAU_RSO_RGH_COD
  END AS LDB1_CAU_RSO_RGH_COD,
  CASE
    WHEN CAU_RSO_RGH_COD = 'VEN'
    OR CAU_RSO_RGH_COD = 'RES'
    OR CAU_RSO_RGH_COD = 'OMA'
    OR CAU_RSO_RGH_COD = 'SPE'
    OR CAU_RSO_RGH_COD = 'ACR' THEN TLDB1_INPUT.MATRICOLA_ART_SAP
    ELSE null
  END AS LDB1_ART_MOVM_COD,
  TLDB1_INPUT.ARTICOLO_COD AS LDB1_ARTICOLO_COD,
  TLDB1_CLASSE_GENERE.DWM3_CLASSE_COD AS LDB1_CLASSE_COD,
  TLDB1_CLASSE_GENERE.DWM6_GENERE_COD AS LDB1_GENERE_COD,
  TLDB1_ANNO_STA_CLZ.DWDE_VND_ANNO_COD AS LDB1_VND_ANNO_COD,
  TLDB1_ANNO_STA_CLZ.DWDE_VND_STAG_COD AS LDB1_VND_STAG_COD,
  TLDB1_ANNO_STA_CLZ.DWDE_VND_CLZ_COD AS LDB1_VND_CLZ_COD,
  STA_FCO_COD AS LDB1_STA_FCO_COD,
  TLDB1_COLORE_COD.COLORE_COD AS LDB1_COLORE_COD,
  COALESCE(EDDA_TAGLIA_COD, 'nd') AS LDB1_TAGLIA_COD,
  UDM_COD AS LDB1_UDM_COD,
  CASE
    WHEN CAU_RSO_RGH_COD = 'SPE'
    OR CAU_RSO_RGH_COD = 'ACR'
    or CAU_RSO_RGH_COD = 'ACU'
    or CAU_RSO_RGH_COD = 'BUR'
    or CAU_RSO_RGH_COD = 'BUU' THEN null
    ELSE QTA
  END AS LDB1_QTA_NUM,
  CASE
    WHEN CAU_RSO_RGH_COD = 'SPE'
    OR CAU_RSO_RGH_COD = 'ACR'
    or CAU_RSO_RGH_COD = 'ACU'
    or CAU_RSO_RGH_COD = 'BUR'
    or CAU_RSO_RGH_COD = 'BUU' THEN null
    ELSE SEGNO_QTA
  END AS LDB1_SEGN_QTA_COD,
  CASE
    WHEN TDWD1.DWD1_RULE_COD = "2" THEN TLDB1_INPUT.VALUTA_KONV
    ELSE TLDB1_INPUT.VALUTA
  END AS LDB1_VALUTA_COD,

  null AS LDB1_PRIX_VND_EUR_VAL,
  ROUND(${TLDB1_TRANS_SAPBS_SAL_utils.lisVnd()}, 5) AS LDB1_PRIX_VND_LOC_VAL,
  ROUND(${TLDB1_TRANS_SAPBS_SAL_utils.lisVndSzIva()}, 5) AS LDB1_PRIX_VND_SZ_IVA_LOC_VAL,
  null LDB1_PRIX_ORIG_EUR_VAL,
  ROUND(
    CASE
      WHEN CAU_RSO_RGH_COD = 'SPE'
      OR CAU_RSO_RGH_COD = 'ACR'
      OR CAU_RSO_RGH_COD = 'ACU'
      OR CAU_RSO_RGH_COD = 'BUR'
      OR CAU_RSO_RGH_COD = 'BUU' THEN null
      ELSE PRIX_ORIG_LOC
    END,
    5
  ) AS LDB1_PRIX_ORIG_LOC_VAL,
  ROUND(
    (
      CASE
        WHEN TLDB1_INPUT.RULE_COD = "2" then 0
        WHEN ${TLDB1_TRANS_SAPBS_SAL_utils.scontoManualeCausale()} = 'MCHP'
        AND VBRP_ZZPOSOV = 'X' THEN PRIX_VND_LOC - ${TLDB1_TRANS_SAPBS_SAL_utils.scontoManualeVal()}
        ELSE 0
      END
    ),
    5
  ) AS LDB1_DELTA_CAMBPRIX_LOC_VAL,
  null LDB1_DELTA_CAMBPRIX_EUR_VAL,
  ROUND(
    CASE
      WHEN ${TLDB1_TRANS_SAPBS_SAL_utils.lisVndSzIva()} is null
      OR ${TLDB1_TRANS_SAPBS_SAL_utils.lisVndSzIva()} = 0
      OR ${TLDB1_TRANS_SAPBS_SAL_utils.lisOrig()} is null
      OR ${TLDB1_TRANS_SAPBS_SAL_utils.lisOrig()} = 0
      OR ${TLDB1_TRANS_SAPBS_SAL_utils.lisVnd()} is null
      OR ${TLDB1_TRANS_SAPBS_SAL_utils.lisVnd()} = 0 THEN 0
      ELSE (${TLDB1_TRANS_SAPBS_SAL_utils.lisVndSzIva()} * ${TLDB1_TRANS_SAPBS_SAL_utils.lisOrig()}) / ${TLDB1_TRANS_SAPBS_SAL_utils.lisVnd()}
    END,
    5
  ) AS LDB1_PRIX_ORIG_SZ_IVA_LOC_VAL,
  CASE
   WHEN CAU_RSO_RGH_COD = 'OMA' OR VBRP_PSTYV = 'ZOMV' THEN 0
    WHEN TLDB1_INPUT.RULE_COD = "2" THEN ROUND(((IMP_RGH_LOC_VAL) + TLDB1_TAX_VAL.TAX * SEGNO_QTA), 5)
    ELSE ROUND((IMP_RGH_LOC_VAL) + TLDB1_TAX_VAL.TAX * SEGNO_QTA, 5)
  END AS LDB1_TOT_NET_LOC_VAL,
  NULL AS LDB1_TOT_NET_EUR_VAL,
  CASE
    WHEN TLDB1_INPUT.RULE_COD = "2" then "0"
    WHEN ${TLDB1_TRANS_SAPBS_SAL_utils.scontoManualeCausale()} = 'MCHP'
    AND VBRP_ZZPOSOV = 'X' THEN '1'
    ELSE '0'
  END AS LDB1_CAMBIO_PREZZO_FLG,
  null AS LDB1_SCONTO_RGH_EUR_VAL,

  CASE
    WHEN CAU_RSO_RGH_COD = 'OMA'
    OR VBRP_PSTYV = 'ZOMV' THEN 0
    WHEN TLDB1_VALORE_SCONTO_RIGA.SCONTO_RGH_LOC_VAL is null THEN 0
    ELSE TLDB1_VALORE_SCONTO_RIGA.SCONTO_RGH_LOC_VAL
  END AS LDB1_SCONTO_RGH_LOC_VAL,
  null AS LDB1_SCONTO1_RGH_EUR_VAL,
  CASE
    WHEN CAU_RSO_RGH_COD = 'OMA'
    OR VBRP_PSTYV = 'ZOMV' THEN 0
    WHEN KONV_TDWN4_causale_sconto_riga_1.SCONTO_RGH_LOC_VAL is null THEN 0
    ELSE KONV_TDWN4_causale_sconto_riga_1.SCONTO_RGH_LOC_VAL
  END AS LDB1_SCONTO1_RGH_LOC_VAL,
  null AS LDB1_SCONTO2_RGH_EUR_VAL,
  CASE
    WHEN CAU_RSO_RGH_COD = 'OMA'
    OR VBRP_PSTYV = 'ZOMV' THEN 0
    WHEN KONV_TDWN4_causale_sconto_riga_2.SCONTO_RGH_LOC_VAL is null THEN 0
    ELSE KONV_TDWN4_causale_sconto_riga_2.SCONTO_RGH_LOC_VAL
  END AS LDB1_SCONTO2_RGH_LOC_VAL,
  null AS LDB1_SCONTO3_RGH_EUR_VAL,
  CASE
    WHEN CAU_RSO_RGH_COD = 'OMA'
    OR VBRP_PSTYV = 'ZOMV' THEN 0
    WHEN KONV_TDWN4_causale_sconto_riga_3.SCONTO_RGH_LOC_VAL is null THEN 0
    ELSE KONV_TDWN4_causale_sconto_riga_3.SCONTO_RGH_LOC_VAL
  END AS LDB1_SCONTO3_RGH_LOC_VAL,
  0 AS LDB1_SCONTO_SCN_EUR_VAL,
  0 AS LDB1_SCONTO_SCN_LOC_VAL,
 ROUND( CASE
    WHEN CAU_RSO_RGH_COD = 'OMA' OR VBRP_PSTYV = 'ZOMV' THEN 0
    ELSE CASE 
    WHEN TDWD1.DWD1_SORGENTE_DATI_COD IN ("JAPAN","KOREA") THEN (IMP_RGH_LOC_VAL - COMMISSION_LOC)
    WHEN TLDB1_INPUT.RULE_COD = "2" THEN (IMP_RGH_LOC_VAL)
    ELSE IMP_RGH_LOC_VAL
    END 
  END, 5) AS LDB1_IMP_RGH_LOC_VAL,
  CASE
    WHEN CAU_RSO_RGH_COD = 'OMA'
    OR VBRP_PSTYV = 'ZOMV' THEN 0
    WHEN TDWD1.DWD1_SORGENTE_DATI_COD NOT IN ("JAPAN", "USA") THEN COALESCE(TLDB1_VAT.ZINT_VAT_PERC, 0)
    ELSE 0
  END AS LDB1_ALQ_PRC,
  CASE
    WHEN CAU_RSO_RGH_COD = 'OMA'
    OR VBRP_PSTYV = 'ZOMV' THEN 0
    WHEN TDWD1.DWD1_SORGENTE_DATI_COD IN ("JAPAN", "USA") THEN COALESCE(TLDB1_VAT.ZINT_VAT_PERC, 0)
    ELSE 0
  END AS LDB1_TAX_PRC,
  CASE
    WHEN CAU_RSO_RGH_COD = 'OMA'OR VBRP_PSTYV = 'ZOMV' THEN 0
    ELSE ROUND(TLDB1_TAX_VAL.TAX, 2)
  END AS LDB1_TAX_IVA_LOC_VAL,
  null AS LDB1_PRIMA_RGH_FLG,
  null AS LDB1_IMP_RGH_EUR_VAL,
  ROUND(
    CASE
      WHEN TDWD1.DWD1_RULE_COD <> "2" THEN CASE
        WHEN CAU_RSO_RGH_COD = 'SPE'
        OR CAU_RSO_RGH_COD = 'ACR'
        OR CAU_RSO_RGH_COD = 'ACU'
        OR CAU_RSO_RGH_COD = 'BUR'
        OR CAU_RSO_RGH_COD = 'BUU' THEN null
        WHEN tess_intr_flg = '1' THEN (
          (
            IMP_TRAS_konv
          ) / 100
        )
        ELSE IMP_TRAS_konv
      END
      
      WHEN TDWD1.DWD1_RULE_COD = "2" THEN (
        TLDB1_INPUT.IMP_TRAS_LOC_VAL
      )
      WHEN CAU_RSO_RGH_COD = 'SPE' THEN null
      ELSE IMP_TRAS_konv
    END,
    5
  ) as LDB1_IMP_TRAS_LOC_VAL,
  null as LDB1_IMP_TRAS_EUR_VAL,
  null AS LDB1_IMP_COMM_EUR_VAL,
  ROUND(
    CASE
      WHEN CAU_RSO_RGH_COD = 'OMA'
      OR VBRP_PSTYV = 'ZOMV' THEN 0
      ELSE IMP_RGH_LOC_VAL
    END,
    5
  ) AS LDB1_IMP_COMM_LOC_VAL,
  0 AS LDB1_COMM_EUR_VAL,
  CASE
    WHEN TDWD1.DWD1_SORGENTE_DATI_COD IN ("JAPAN", "KOREA") THEN CAST(
      ROUND(
        COMMISSION_LOC,
        5
      ) AS NUMERIC
    )
    ELSE 0
  END AS LDB1_COMM_LOC_VAL,
  COALESCE(DWN8_COSTO_STDC_EUR_VAL, 0) AS LDB1_COSTO_STDC_EUR_VAL,
  COALESCE(DWN8_COSTO_STDG_EUR_VAL, 0) AS LDB1_COSTO_STDG_EUR_VAL,
  null LDB1_CSTD_SAP_EUR_VAL,
  TDWAF.DWAF_ANLS_ANNO_COD AS LDB1_ANLS_ANNO_COD,
  TDWDC.DWMF_LOGICA_ACQ_COD AS LDB1_LOGICA_ACQ_COD,
  COALESCE(TDWDC.DWMI_SALE_COD, "nd") AS LDB1_SALE_COD,
  TDWDC.DWMS_CANALE_COMM_COD AS LDB1_CANALE_COMM_COD,
  TDWDC.DWDC_OBS_ANNO_COD AS LDB1_OBS_ANNO_COD,
  TDWDC.DWDC_OBS_STAG_COD AS LDB1_OBS_STAG_COD,
  TDWDC.DWMJ_RETAIL_MNG_COD AS LDB1_RETAIL_MNG_COD,
  TLDB1_LISTINO_RTL.DWNA_ORIG_ITA_LOC_VAL AS LDB1_ORIG_ITA_LOC_VAL,
  DATETIME_TRUNC(CURRENT_DATETIME(), SECOND) AS LDB1_VARZ_DTA,
  COALESCE(
    ROUND(
      CASE
        WHEN CAU_RSO_RGH_COD = 'OMA'
        OR VBRP_PSTYV = 'ZOMV' THEN 0
        ELSE CASE
          WHEN TDWD1.DWD1_RULE_COD = "2" THEN (
            COSTO_STD_SAP
          )
          WHEN tess_intr_flg = '1' THEN (
            COSTO_STD_SAP
          ) / 100
          ELSE COSTO_STD_SAP
        END
      END,
      5
    ),
    0
  ) AS LDB1_CSTD_SAP_LOC_VAL,
  null LDB1_ROUND_EUR_VAL,
  TLDB1_QUALITA_TRANS.DWZ4_QUALITA_COD as LDB1_QUALITA_COD,
  CASE
    WHEN TLDB1_INPUT.OPERATORE_COD is null THEN 'nd'
    ELSE CAST(TLDB1_INPUT.OPERATORE_COD AS STRING)
  END AS LDB1_OPERATORE_COD,
  CASE
    WHEN TDWD1.DWD1_RULE_COD = "2" THEN "Valuta di fatturazione: " || TLDB1_INPUT.VALUTA
    ELSE 'nd'
  END AS LDB1_NOTE_DES,
  CASE
    WHEN MOTIVO_ACQ_COD is null THEN 'nd'
    ELSE MOTIVO_ACQ_COD
  END AS LDB1_MOTIVO_ACQ_COD,
  CASE
    WHEN CAU_RSO_RGH_COD = 'OMA'
    OR VBRP_PSTYV = 'ZOMV' THEN 0
    WHEN TLDB1_VALUTA_KONV.KONV_KWERT is null THEN 0
    ELSE TLDB1_VALUTA_KONV.KONV_KWERT
  END AS LDB1_ROUND_LOC_VAL,
  0 as LDB1_ORD_TLFN_FLG,
  CASE
    WHEN ${ref("TLDB1_SALDO_RIGA")}.KONV_KSCHL is not null THEN '1'
    ELSE '0'
  END AS LDB1_SALDO_FLG,
  
  CASE
    WHEN ${TLDB1_TRANS_SAPBS_SAL_utils.chkBatch()} = 'ok' THEN BATCH_ANN_COD
    ELSE '-'
  END AS LDB1_BATCH_ANN_COD,

  CASE
    WHEN ${TLDB1_TRANS_SAPBS_SAL_utils.chkBatch()} = 'ok' THEN BATCH_STAG_COD
    ELSE '-'
  END AS LDB1_BATCH_STAG_COD,
  CASE
    WHEN ${TLDB1_TRANS_SAPBS_SAL_utils.chkBatch()} = 'ok' THEN BATCH_SOTTO_STAG_COD
    ELSE '-'
  END AS LDB1_BATCH_SOTTO_STAG_COD,
  VBRP_CHARG AS LDB1_BATCH_COD,
  --BATCH_COD
  null AS LDB1_SCONTO_DIP_EUR_VAL,
  CASE
    WHEN TLDB1_VALORE_SCONTO_DIPENDENTE.SCONTO_RGH_LOC_VAL is null THEN 0
    ELSE TLDB1_VALORE_SCONTO_DIPENDENTE.SCONTO_RGH_LOC_VAL
  END AS LDB1_SCONTO_DIP_LOC_VAL,
  CASE
    WHEN (
      VBRK_ZZPOSTRANSTIME is null
      OR VBRK_ZZPOSTRANSTIME = ""
    ) THEN null
    ELSE DATETIME(
      CONCAT(
        SUBSTR(CAST(EMISSIONE_DTA AS STRING), 1, 10),
        " ",
        VBRK_ZZPOSTRANSTIME
      )
    )
  END AS LDB1_EMISSIONE_TIME_DTA,
  VBRK_ZZPOSORD AS LDB1_ECO_DOC_NUM,
  VBRK_ZZPOSORORD AS LDB1_ECO_DOC_ORI_NUM,
  VBRK_VBELN AS LDB1_VBELN_COD,
  VBRP_PSTYV AS LDB1_TIPO_MOV_SAP_COD,
  CASE
    WHEN TDWD1.DWD1_RULE_COD = "2" THEN ROUND(IMP_RGH_LOC_VAL, 5)
    ELSE ROUND(IMP_RGH_LOC_VAL, 5)
  END AS LDB1_IMP_RGH2_LOC_VAL,
  ROUND(  CASE
    WHEN CAU_RSO_RGH_COD = 'OMA'
    OR VBRP_PSTYV = 'ZOMV' THEN 0
    ELSE
      CASE
        WHEN TDWD1.DWD1_RULE_COD = "2" THEN IMP_TRANSACTION_VAL
        ELSE IMP_TRANSACTION_VAL
      END
    END,
    5
  ) AS LDB1_IMP_TRANSACTION_VAL,
  VALUTA_TRANSACTION_COD AS LDB1_VALUTA_TRANSACTION_COD,
  VBRP_ZZPOSMARK AS LDB1_SALES_MARK_ATTRIBUTE_COD,
  CASE
    WHEN TLDB1_INPUT.ID_SCN IN (
      SELECT
        ID_SCN_COD_ANNULLATO
      FROM
        ${ref("TLDB1_ANNULLATI")}
    )
    AND NOT STARTS_WITH (
      CAU_RSO_RGH_COD,
      'Z'
    ) THEN 1
    ELSE ANNULLO_FLG
  END LDB1_ANNULLO_FLG,
  CASE
    WHEN Annullati.ID_SCN_COD_ANNULLANTE IS NOT NULL THEN Annullati.ID_SCN_COD_ANNULLANTE
    WHEN Annullanti.ID_SCN_COD_ANNULLATO IS NOT NULL THEN Annullanti.ID_SCN_COD_ANNULLATO
    ELSE NULL
  END AS LDB1_ID_SCN_COLLEGATO_COD,
  CASE
    WHEN Annullati.ID_SCN_COD_ANNULLANTE IS NOT NULL OR Annullanti.ID_SCN_COD_ANNULLATO IS NOT NULL THEN TLDB1_INPUT.ID_RGH
    ELSE NULL
  END AS LDB1_ID_RGH_COLLEGATO_COD,
  CASE
    WHEN Annullanti.ID_SCN_COD_ANNULLATO IS NOT NULL THEN TLDB1_DELTA_GIORNI_ANNULLANTE.LDB1_SCN_COLLEGATO_GG_DLTA_NUM
    WHEN Annullati.ID_SCN_COD_ANNULLANTE IS NOT NULL THEN TLDB1_DELTA_GIORNI_ANNULLATO.LDB1_SCN_COLLEGATO_GG_DLTA_NUM
    ELSE null
  END AS LDB1_SCN_COLLEGATO_GG_DLTA_NUM
FROM
  ${ref("TLDB1_INPUT")} TLDB1_INPUT
  LEFT JOIN ${ref("TLDB1_COLORE_COD")} TLDB1_COLORE_COD ON TLDB1_COLORE_COD.ID_SCN = TLDB1_INPUT.ID_SCN
  AND TLDB1_COLORE_COD.ID_RGH = TLDB1_INPUT.ID_RGH
  LEFT JOIN ${ref("TLDB1_VAT")} TLDB1_VAT ON TLDB1_VAT.ID_SCN = TLDB1_INPUT.ID_SCN
  AND TLDB1_VAT.ID_RGH = TLDB1_INPUT.ID_RGH
  AND TLDB1_INPUT.STATO_COD = TLDB1_VAT.ZINT_VAT_LAND1
  LEFT JOIN ${ref("TLDB1_TAX_VAL")} TLDB1_TAX_VAL ON TLDB1_TAX_VAL.ID_SCN = TLDB1_INPUT.ID_SCN
  AND TLDB1_TAX_VAL.ID_RGH = TLDB1_INPUT.ID_RGH
  LEFT JOIN ${ref("TLDB1_SALDO_RIGA")} ON TLDB1_INPUT.temp_PER_VALORI = ${ref("TLDB1_SALDO_RIGA")}.KONV_KNUMV
  AND TLDB1_INPUT.ID_RGH_STR = ${ref("TLDB1_SALDO_RIGA")}.KONV_KPOSN
  
  LEFT JOIN ${ref("TLDB1_VALORE_SCONTO_RIGA")} TLDB1_VALORE_SCONTO_RIGA ON TLDB1_INPUT.temp_PER_VALORI = TLDB1_VALORE_SCONTO_RIGA.KONV_KNUMV
  AND TLDB1_INPUT.ID_RGH_STR = TLDB1_VALORE_SCONTO_RIGA.KONV_KPOSN
  
  LEFT JOIN ${ref("TLDB1_VALORE_SCONTO_DIPENDENTE")} TLDB1_VALORE_SCONTO_DIPENDENTE ON TLDB1_INPUT.temp_PER_VALORI = TLDB1_VALORE_SCONTO_DIPENDENTE.KONV_KNUMV
  AND TLDB1_INPUT.ID_RGH_STR = TLDB1_VALORE_SCONTO_DIPENDENTE.KONV_KPOSN
  LEFT JOIN ${ref("TLDB1_VALUTA_KONV")} TLDB1_VALUTA_KONV ON TLDB1_INPUT.temp_PER_VALORI = TLDB1_VALUTA_KONV.KONV_KNUMV
  AND TLDB1_INPUT.ID_RGH_STR = TLDB1_VALUTA_KONV.KONV_KPOSN
  LEFT JOIN ${ref("TLDB1_CAUSALE_SCONTO_RIGA")} AS KONV_TDWN4_causale_sconto_riga_1 ON TLDB1_INPUT.temp_PER_VALORI = KONV_TDWN4_causale_sconto_riga_1.KONV_KNUMV
  AND TLDB1_INPUT.ID_RGH_STR = KONV_TDWN4_causale_sconto_riga_1.KONV_KPOSN
  AND KONV_TDWN4_causale_sconto_riga_1.ORDINE = 1
  LEFT JOIN ${ref("TLDB1_CAUSALE_SCONTO_RIGA")} AS KONV_TDWN4_causale_sconto_riga_2 ON TLDB1_INPUT.temp_PER_VALORI = KONV_TDWN4_causale_sconto_riga_2.KONV_KNUMV
  AND TLDB1_INPUT.ID_RGH_STR = KONV_TDWN4_causale_sconto_riga_2.KONV_KPOSN
  AND KONV_TDWN4_causale_sconto_riga_2.ORDINE = 2
  LEFT JOIN ${ref("TLDB1_CAUSALE_SCONTO_RIGA")} AS KONV_TDWN4_causale_sconto_riga_3 ON TLDB1_INPUT.temp_PER_VALORI = KONV_TDWN4_causale_sconto_riga_3.KONV_KNUMV
  AND TLDB1_INPUT.ID_RGH_STR = KONV_TDWN4_causale_sconto_riga_3.KONV_KPOSN
  AND KONV_TDWN4_causale_sconto_riga_3.ORDINE = 3
  LEFT JOIN ${PARTITION.ref(ref("TDWD1_ANAG_NEGZ_ANG"), "ANG")} TDWD1 ON NEGZ_COD = DWD1_NEGZ_COD
  LEFT JOIN ${PARTITION.ref(ref("TDWQ8_TIPO_UNIT_ANG"), "ANG")} TDWQ8 ON TDWQ8.DWQ8_TIPO_UNIT_COD = TDWD1.DWQ8_TIPO_UNIT_COD
  LEFT JOIN ${ref("TLDB1_ANNULLATI")} Annullati ON Annullati.ID_SCN_COD_ANNULLATO = TLDB1_INPUT.ID_SCN
  AND Annullati.ID_RGH_COD_ANNULLANTE = TLDB1_INPUT.ID_RGH
  left join ${ref("TLDB1_ANNULLATI")} Annullanti ON Annullanti.ID_SCN_COD_ANNULLANTE = TLDB1_INPUT.ID_SCN
  AND Annullanti.ID_RGH_COD_ANNULLANTE = TLDB1_INPUT.ID_RGH
  LEFT JOIN ${ref("TLDB1_ANNO_STA_CLZ")} TLDB1_ANNO_STA_CLZ ON TLDB1_ANNO_STA_CLZ.ID_SCN = TLDB1_INPUT.ID_SCN
  AND TLDB1_ANNO_STA_CLZ.ID_RGH = TLDB1_INPUT.ID_RGH
  LEFT JOIN ${PARTITION.ref(ref("TDWDC_ARTICOLI_COLORE_ANG"), "ANG")} TDWDC ON TDWDC.DWD4_ARTICOLO_COD = TLDB1_INPUT.ARTICOLO_COD
  AND TDWDC.DWM9_COLORE_COD = TLDB1_COLORE_COD.COLORE_COD
  AND TDWDC.DWDE_VND_ANNO_COD = TLDB1_ANNO_STA_CLZ.DWDE_VND_ANNO_COD
  AND TDWDC.DWDE_VND_STAG_COD = TLDB1_ANNO_STA_CLZ.DWDE_VND_STAG_COD
  AND TDWDC.DWDE_VND_CLZ_COD = TLDB1_ANNO_STA_CLZ.DWDE_VND_CLZ_COD
  LEFT JOIN ${PARTITION.ref(ref("TDWN8_LISTINO_STD_FULL_ANG"), "ANG")} TDWN8 ON TDWN8.DWD4_ARTICOLO_COD = TLDB1_INPUT.ARTICOLO_COD
  AND TDWN8.DWM9_COLORE_COD = TLDB1_COLORE_COD.COLORE_COD
  AND TDWN8.DWN8_LST_ANNO_COD = TLDB1_ANNO_STA_CLZ.DWDE_VND_ANNO_COD
  AND TDWN8.DWN8_LST_STG_COD = TLDB1_ANNO_STA_CLZ.DWDE_VND_STAG_COD
  AND TDWN8.DWN8_LST_CLZ_COD = TLDB1_ANNO_STA_CLZ.DWDE_VND_CLZ_COD
  LEFT JOIN ${ref("TLDB1_LISTINO_RTL")} TLDB1_LISTINO_RTL ON TLDB1_LISTINO_RTL.DWD4_ARTICOLO_COD = TLDB1_INPUT.ARTICOLO_COD
  AND TLDB1_LISTINO_RTL.DWMA_STA_FCO_COD = STA_FCO_COD
  LEFT JOIN ${ref("TLDB1_TIPO_SCN_BASE")} TLDB1_TIPO_SCN_BASE ON TLDB1_TIPO_SCN_BASE.ID_SCN = TLDB1_INPUT.ID_SCN
  LEFT JOIN ${ref("TLDB1_TIPO_SCN_SOS_MST")} TLDB1_TIPO_SCN_SOS_MST ON TLDB1_TIPO_SCN_SOS_MST.ID_SCN = TLDB1_INPUT.ID_SCN
  LEFT JOIN ${ref("TLDB1_TIPO_SCN_VEN_RES_SPE")} TLDB1_TIPO_SCN_VEN_RES_SPE ON TLDB1_TIPO_SCN_VEN_RES_SPE.ID_SCN = TLDB1_INPUT.ID_SCN
  LEFT JOIN ${ref("TLDB1_CLASSE_GENERE")} TLDB1_CLASSE_GENERE ON TLDB1_CLASSE_GENERE.ID_SCN = TLDB1_INPUT.ID_SCN
  AND TLDB1_CLASSE_GENERE.ID_RGH = TLDB1_INPUT.ID_RGH
  LEFT JOIN ${ref("TLDB1_QUALITA_TRANS")} TLDB1_QUALITA_TRANS ON TLDB1_QUALITA_TRANS.DWZ4_VALORE1_COD = STA_FCO_COD
  LEFT JOIN ${ref("TLDB1_SU_MISURA")} TLDB1_SU_MISURA ON TLDB1_SU_MISURA.DWD4_ARTICOLO_COD = TLDB1_INPUT.ARTICOLO_COD
  LEFT JOIN ${PARTITION.ref(ref("TDWAF_PERIODI_ANALISI_ANG"), "ANG", ["DWAF_ANLS_STAG_COD", "DWAF_ANLS_DA_DTA", "DWAF_ANLS_A_DTA", "DWAF_ANLS_ANNO_COD"])} TDWAF ON TDWAF.DWAF_ANLS_STAG_COD = TLDB1_ANNO_STA_CLZ.DWDE_VND_STAG_COD
  AND TDWAF.DWAF_ANLS_DA_DTA <= EMISSIONE_DTA
  AND TDWAF.DWAF_ANLS_A_DTA >= EMISSIONE_DTA
  LEFT JOIN ${ref("TLDB1_DELTA_GIORNI_ANNULLO")} TLDB1_DELTA_GIORNI_ANNULLANTE ON TLDB1_DELTA_GIORNI_ANNULLANTE.ID_SCN_COD_ANNULLANTE = TLDB1_INPUT.ID_SCN
  LEFT JOIN ${ref("TLDB1_DELTA_GIORNI_ANNULLO")} TLDB1_DELTA_GIORNI_ANNULLATO ON TLDB1_DELTA_GIORNI_ANNULLATO.ID_SCN_COD_ANNULLATO = TLDB1_INPUT.ID_SCN
