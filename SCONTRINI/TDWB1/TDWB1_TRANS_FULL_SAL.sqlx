config {
  type: "incremental",
  schema: "DWHDM",
  name: "TDWB1_TRANS_FULL_SAL",
  tags: ["scontrini"],
  uniqueKey: ["DWB1_ID_SCN_COD", "DWB1_ID_RGH_COD"],
  description: "Questa tabella incrementale raccoglie in upsert tutti i dati della TLDB1_OUTPUT, la quale invece contiene solamente i dati degli ultimi 10 giorni. Oltre a fare ciò in questo file viene definita la logica di protezione dei campi: Se un dato è già presente nella tabella TLDB1_TRANS_SAL allora viene caricato da questa tabella, invece se non è presente il dato viene preso dalla TDWB1_TRANS_FULL_SAL",
  assertions: {
    uniqueKey: ["DWB1_ID_SCN_COD", "DWB1_ID_RGH_COD"]
  }
}

SELECT
  LDB1_ID_SCN_COD AS DWB1_ID_SCN_COD,
  LDB1_ID_RGH_COD AS DWB1_ID_RGH_COD,
  COALESCE(TLDB1.LDB1_MOTIVO_ACQ_COD, 'nd') AS DWB6_MOTIVO_ACQ_COD,
  LDB1_CLIENTE_COD AS DWB1_CLIENTE_COD,
  COALESCE(TDWG1_DEDUP_OP1_CST.DWG1_CLIE_DWH_COD, 733) AS DWG1_CLIE_DWH_REP_COD,
  COALESCE(TDWG1_DEDUP_OP1_CST.DWG1_CLIE_DWH_COD, 733) AS DWG1_CLIE_DWH_COD,
  LDB1_NEGZ_COD AS DWD1_NEGZ_COD,
  LDB1_STRUT_COMM_COD AS DWD1_STRUT_COMM_COD,
  LDB1_AREA_GEO_DES AS DWF1_AREA_GEO_DES,
  LDB1_STATO_DES AS DWF1_STATO_DES,
  LDB1_TIPO_SCN_COD AS DWB1_TIPO_SCN_COD,
  LDB1_EMISSIONE_DTA AS DWB1_EMISSIONE_DTA,
  LDB1_CAU_RSO_RGH_COD AS DWB1_CAU_RSO_RGH_COD,
  LDB1_ART_MOVM_COD AS DWB1_ART_MOVM_COD,
  LDB1_ARTICOLO_COD AS DWD4_ARTICOLO_COD,
  LDB1_VND_ANNO_COD AS DWDE_VND_ANNO_COD,
  LDB1_VND_STAG_COD AS DWDE_VND_STAG_COD,
  LDB1_VND_CLZ_COD AS DWDE_VND_CLZ_COD,
  LDB1_STA_FCO_COD AS DWMA_STA_FCO_COD,
  COALESCE(TLDB1.LDB1_COLORE_COD, 'nd') AS DWM9_COLORE_COD,
  COALESCE(TLDB1.LDB1_TAGLIA_COD, 'nd') AS DWMH_TAGLIA_COD,
  LDB1_UDM_COD AS DWB1_UDM_COD,
  LDB1_QTA_NUM AS DWB1_QTA_NUM,
  LDB1_SEGN_QTA_COD AS DWB1_SEGN_QTA_COD,
  LDB1_VALUTA_COD AS DWDI_VALUTA_COD,
  LDB1_PRIX_VND_LOC_VAL AS DWB1_PRIX_VND_LOC_VAL,
  LDB1_PRIX_ORIG_LOC_VAL AS DWB1_PRIX_ORIG_LOC_VAL,
  LDB1_DELTA_CAMBPRIX_LOC_VAL AS DWB1_DELTA_CAMBPRIX_LOC_VAL,
  LDB1_TOT_NET_LOC_VAL AS DWB1_TOT_NET_LOC_VAL,
  COALESCE(TLDB1.LDB1_SCONTO_RGH_LOC_VAL, 0) AS DWB1_SCONTO_RGH_LOC_VAL,
  COALESCE(TLDB1.LDB1_CAU_SCONTO1_RGH_COD, 'nd') AS DWN4_CAU_SCONTO1_RGH_COD,
  COALESCE(TLDB1.LDB1_SCONTO1_RGH_LOC_VAL, 0) AS DWB1_SCONTO1_RGH_LOC_VAL,
  COALESCE(TLDB1.LDB1_CAU_SCONTO2_RGH_COD, 'nd') AS DWN4_CAU_SCONTO2_RGH_COD,
  COALESCE(TLDB1.LDB1_SCONTO2_RGH_LOC_VAL, 0) AS DWB1_SCONTO2_RGH_LOC_VAL,
  COALESCE(TLDB1.LDB1_CAU_SCONTO3_RGH_COD, 'nd') AS DWN4_CAU_SCONTO3_RGH_COD,
  COALESCE(TLDB1.LDB1_SCONTO3_RGH_LOC_VAL, 0) AS DWB1_SCONTO3_RGH_LOC_VAL,
ROUND(CASE
    WHEN TLDB1.LDB1_CAU_SCONTO1_RGH_COD <> 'nd'  
    THEN ((TLDB1.LDB1_SCONTO1_RGH_LOC_VAL + TLDB1.LDB1_SCONTO_SCN_LOC_VAL) / 
    (CASE
      WHEN TLDB1.LDB1_ALQ_PRC = 0 THEN 1
      ELSE (1 + TLDB1.LDB1_ALQ_PRC / 100)
    END))
  ELSE 0
END,5)  AS DWB1_SCONTO1_IMP_LOC_VAL ,

ROUND(CASE
    WHEN TLDB1.LDB1_CAU_SCONTO2_RGH_COD <> 'nd'
    THEN ((TLDB1.LDB1_SCONTO2_RGH_LOC_VAL + TLDB1.LDB1_SCONTO_SCN_LOC_VAL) / 
    (CASE
      WHEN TLDB1.LDB1_ALQ_PRC = 0 THEN 1
      ELSE (1 + TLDB1.LDB1_ALQ_PRC / 100)
    END))
  ELSE 0
END,5)  AS DWB1_SCONTO2_IMP_LOC_VAL,

  ROUND(CASE
    WHEN TLDB1.LDB1_CAU_SCONTO3_RGH_COD <> 'nd'
    THEN ((TLDB1.LDB1_SCONTO3_RGH_LOC_VAL + TLDB1.LDB1_SCONTO_SCN_LOC_VAL) / 
    (CASE
      WHEN TLDB1.LDB1_ALQ_PRC = 0 THEN 1
      ELSE (1 + TLDB1.LDB1_ALQ_PRC / 100)
    END))
  ELSE 0
END,5)  AS DWB1_SCONTO3_IMP_LOC_VAL,
  ROUND(CASE
    WHEN TLDB1.LDB1_CAU_SCONTO1_RGH_COD <> 'nd'
    THEN ((TLDB1.LDB1_SCONTO_RGH_LOC_VAL + TLDB1.LDB1_SCONTO_SCN_LOC_VAL) / 
    (CASE
      WHEN TLDB1.LDB1_ALQ_PRC = 0 THEN 1
      ELSE (1 + TLDB1.LDB1_ALQ_PRC / 100)
    END))
  ELSE 0
END,5)  AS DWB1_SCONTO_IMP_LOC_VAL,
COALESCE(TLDB1.LDB1_SCONTO_SCN_LOC_VAL, 0) AS DWB1_SCONTO_SCN_LOC_VAL,
LDB1_IMP_RGH_LOC_VAL AS DWB1_IMP_RGH_LOC_VAL,
COALESCE(TLDB1.LDB1_ALQ_PRC, 0) AS DWB1_ALQ_PRC,
LDB1_TAX_PRC AS DWB1_TAX_PRC,
CASE
  WHEN LDB1_ID_RGH_COD = FLAG THEN 1
  ELSE 0
END AS DWB1_PRIMA_RGH_FLG,
CASE
  WHEN TDWB1.DWB1_LDB1_VARZ_DTA IS NULL THEN TLDB1.LDB1_VARZ_DTA
  ELSE TDWB1.DWB1_LDB1_VARZ_DTA
END AS DWB1_VARZ_DTA,
LDB1_TIPO_ACQ_COD AS DWB1_TIPO_ACQ_COD,
LDB1_IMP_TRAS_LOC_VAL AS DWB1_IMP_TRAS_LOC_VAL,
CASE
  WHEN TLDB1.LDB1_COSTO_STDC_EUR_VAL IS NOT NULL THEN CASE
    WHEN TLDB1.LDB1_COSTO_STDC_EUR_VAL = -1
    OR TLDB1.LDB1_COSTO_STDC_EUR_VAL IS NULL THEN 0
    ELSE TLDB1.LDB1_COSTO_STDC_EUR_VAL * COALESCE(
      ABBATTIMENTI_QUALITA_STDC.DWZ3_ABBATTIMENTO_PRC,
      1
    )
  END
  ELSE TDWB1.DWB1_LDB1_COSTO_STDC_EUR_VAL
END AS DWN8_COSTO_STDC_EUR_VAL,
CASE
  WHEN TLDB1.LDB1_COSTO_STDG_EUR_VAL = -1
  OR TLDB1.LDB1_COSTO_STDG_EUR_VAL IS NULL THEN 0
  ELSE TLDB1.LDB1_COSTO_STDG_EUR_VAL * COALESCE(
    ABBATTIMENTI_QUALITA_STDG.DWZ3_ABBATTIMENTO_PRC,
    1
  )
END AS DWN8_COSTO_STDG_EUR_VAL,
CASE
  WHEN DWB1_MARKETING_TYPE_COD IS NOT NULL THEN DWB1_MARKETING_TYPE_COD
  ELSE COALESCE(
    CASE
      WHEN TAXI_COD.DWD1_STRUT_COMM_COD = 'OUTLET' THEN CASE
        WHEN ARTICOLI_COLORE.SALE_COD IN (
          '001',
          '012',
          '006'
        ) THEN ARTICOLI_COLORE.SALE_COD
        ELSE '001'
      END
      WHEN TAXI_COD.DWD1_STRUT_COMM_COD <> 'OUTLET' THEN CASE
        WHEN ARTICOLI_COLORE.LOGICA_ACQ_COD IN (
          'C',
          'E',
          'R',
          'S'
        ) THEN ARTICOLI_COLORE.LOGICA_ACQ_COD
        ELSE 'S'
      END
      ELSE 'S'
    END,
    "S"
  )
END AS DWR9_MARKETING_TYPE_COD,
COALESCE(TLDB1.LDB1_QUALITA_COD, 'nd') AS DWZ4_QUALITA_COD,
TAXI_COD.DWDZ_NEGZ_DWH_COD AS DWDZ_NEGZ_DWH_COD,
COALESCE(TLDB1.LDB1_ORD_TLFN_FLG, 0) AS DWB1_ORD_TLFN_FLG,
CASE
  WHEN TLDB1.LDB1_OPERATORE_COD IS NULL
  OR TLDB1.LDB1_OPERATORE_COD = ' ' THEN 'nd'
  ELSE TLDB1.LDB1_OPERATORE_COD
END AS DWB5_OPERATORE_COD,
COALESCE(TLDB1.LDB1_NOTE_DES, 'nd') AS DWB1_NOTE_DES,
COALESCE(TLDB1.LDB1_CAMBIO_PREZZO_FLG, "0") AS DWB1_CAMBIO_PREZZO_FLG,
CASE
  WHEN TLDB1.LDB1_SALDO_FLG IS NULL
  OR TLDB1.LDB1_SALDO_FLG = ' ' THEN "0"
  ELSE TLDB1.LDB1_SALDO_FLG
END AS DWB1_SALDO_FLG,
LDB1_IMP_COMM_LOC_VAL AS DWB1_IMP_COMM_LOC_VAL,
LDB1_COMM_LOC_VAL AS DWB1_COMM_LOC_VAL,
CASE
  WHEN TDWB1.DWB1_LDB1_CSTD_SAP_LOC_VAL > 0 THEN TDWB1.DWB1_LDB1_CSTD_SAP_LOC_VAL
  ELSE TLDB1.LDB1_CSTD_SAP_LOC_VAL
END AS DWB1_CSTD_SAP_LOC_VAL,
LDB1_TAX_IVA_LOC_VAL AS DWB1_TAX_IVA_LOC_VAL,
LDB1_ROUND_LOC_VAL AS DWB1_ROUND_LOC_VAL,
CASE
  WHEN TDWD1.DWD1_RULE_COD = "2" THEN CASE
    WHEN TLDB1.LDB1_NEGZ_COD = 'ZI01' THEN 'E_EU'
    ELSE 'E_CN'
  END
  ELSE 'BS'
END AS DWB1_SORGENTE_COD,
COALESCE(TLDB1.LDB1_ANLS_ANNO_COD, '-') AS DWAF_ANLS_ANNO_COD,
CASE
  WHEN TDWB1.DWB1_LDB1_LOGICA_ACQ_COD IS NULL
  OR TDWB1.DWB1_LDB1_LOGICA_ACQ_COD = 'nd' THEN COALESCE(TLDB1.LDB1_LOGICA_ACQ_COD, 'nd')
  ELSE TDWB1.DWB1_LDB1_LOGICA_ACQ_COD
END DWMF_LOGICA_ACQ_COD,
CASE
  WHEN TDWB1.DWB1_LDB1_SALE_COD IS NULL
  OR TDWB1.DWB1_LDB1_SALE_COD = 'nd' THEN COALESCE(TLDB1.LDB1_SALE_COD, 'nd')
  ELSE TDWB1.DWB1_LDB1_SALE_COD
END AS DWMI_SALE_COD,
CASE
  WHEN TDWB1.DWB1_LDB1_CANALE_COMM_COD IS NULL THEN TLDB1.LDB1_CANALE_COMM_COD
  ELSE TDWB1.DWB1_LDB1_CANALE_COMM_COD
END AS DWMS_CANALE_COMM_COD,
CASE
  WHEN TDWB1.DWB1_LDB1_OBS_ANNO_COD IS NULL THEN COALESCE(TLDB1.LDB1_OBS_ANNO_COD, '-')
  ELSE TDWB1.DWB1_LDB1_OBS_ANNO_COD
END AS DWDC_OBS_ANNO_COD,
CASE
  WHEN TDWB1.DWB1_LDB1_OBS_STAG_COD IS NULL THEN COALESCE(TLDB1.LDB1_OBS_STAG_COD, '-')
  ELSE TDWB1.DWB1_LDB1_OBS_STAG_COD
END AS DWDC_OBS_STAG_COD,
LDB1_BATCH_COD AS DWB1_BATCH_COD,
LDB1_BATCH_ANN_COD AS DWB1_BATCH_ANN_COD,
LDB1_BATCH_STAG_COD AS DWB1_BATCH_STAG_COD,
LDB1_BATCH_SOTTO_STAG_COD AS DWB1_BATCH_SOTTO_STAG_COD,
LDB1_STATO_FATT_COD AS DWF1_STATO_FATT_COD,
DWAJ_PMPA_LOC_VAL,
COALESCE(TLDB1.LDB1_SCONTO_DIP_LOC_VAL, 0) AS DWB1_SCONTO_DIP_LOC_VAL,
CASE
  WHEN TDWB1.DWB1_LDB1_ID_SCN_COD IS NULL THEN TLDB1.LDB1_RETAIL_MNG_COD
  ELSE TDWB1.DWB1_LDB1_RETAIL_MNG_COD
END AS DWMJ_RETAIL_MNG_COD,
LDB1_EMISSIONE_TIME_DTA AS DWB1_EMISSIONE_TIME_DTA,
LDB1_ECO_DOC_NUM AS DWB9_ECO_DOC_NUM,
LDB1_ECO_DOC_ORI_NUM AS DWB9_ECO_DOC_ORI_NUM,
LDB1_VBELN_COD AS DWB1_VBELN_COD,
LDB1_TIPO_MOV_SAP_COD AS DWB1_TIPO_MOV_SAP_COD,
LDB1_IMP_RGH2_LOC_VAL AS DWB1_IMP_RGH2_LOC_VAL,
LDB1_IMP_TRANSACTION_VAL AS DWB1_IMP_TRANSACTION_VAL,
LDB1_VALUTA_TRANSACTION_COD AS DWDI_VALUTA_TRANSACTION_COD,
LDB1_PRIX_VND_SZ_IVA_LOC_VAL AS DWB1_PRIX_VND_SZ_IVA_LOC_VAL,
LDB1_PRIX_ORIG_SZ_IVA_LOC_VAL AS DWB1_PRIX_ORIG_SZ_IVA_LOC_VAL,
COALESCE(
  TLDB1.LDB1_SALES_MARK_ATTRIBUTE_COD,
  'nd'
) AS DWBF_SALES_MARK_ATTRIBUTE_COD,
CASE
  WHEN TDWB1.DWB1_LDB1_ORIG_ITA_LOC_VAL IS NULL THEN TLDB1.LDB1_ORIG_ITA_LOC_VAL
  ELSE TDWB1.DWB1_LDB1_ORIG_ITA_LOC_VAL
END AS DWNA_ORIG_ITA_LOC_VAL,
CASE
  WHEN PROFIT_CENTER.DWA2_PROFIT_CENTER_COD IS NOT NULL THEN PROFIT_CENTER.DWA2_PROFIT_CENTER_COD
  ELSE PROFIT_NO_STATO.DWA2_PROFIT_CENTER_COD
END AS DWW6_PROFIT_CENTER_COD,
CASE
  WHEN PROFIT_CENTER.DWA2_PROFIT_CENTER_COD IS NOT NULL THEN PROFIT_CENTER.DWA2_PROFIT_CENTER_HFM_COD
  ELSE PROFIT_NO_STATO.DWA2_PROFIT_CENTER_HFM_COD
END AS DWA2_PROFIT_CENTER_HFM_COD,
LDB1_ANNULLO_FLG as DWB1_ANNULLO_FLG,
CASE
  WHEN TDWB1.DWB1_ID_SCN_COLLEGATO_COD IS NULL THEN TLDB1.LDB1_ID_SCN_COLLEGATO_COD
  ELSE TDWB1.DWB1_ID_SCN_COLLEGATO_COD
END AS DWB1_ID_SCN_COLLEGATO_COD,
CASE
  WHEN TDWB1.DWB1_ID_RGH_COLLEGATO_COD IS NULL THEN TLDB1.LDB1_ID_RGH_COLLEGATO_COD
  ELSE TDWB1.DWB1_ID_RGH_COLLEGATO_COD
END AS DWB1_ID_RGH_COLLEGATO_COD,
DWB1_CICLO_COLLEGATO_NUM,
DWB1_SCN_COLLEGATO_GG_DLTA_NUM

FROM
  ${ref("TLDB1_TRANS_SAL")} TLDB1
  LEFT JOIN (
    SELECT
      DWB1_ID_SCN_COD as DWB1_LDB1_ID_SCN_COD,
      DWB1_ID_RGH_COD as DWB1_LDB1_ID_RGH_COD,
      DWMF_LOGICA_ACQ_COD AS DWB1_LDB1_LOGICA_ACQ_COD,
      DWN8_COSTO_STDC_EUR_VAL AS DWB1_LDB1_COSTO_STDC_EUR_VAL,
      DWB1_CSTD_SAP_LOC_VAL AS DWB1_LDB1_CSTD_SAP_LOC_VAL,
      DWMI_SALE_COD AS DWB1_LDB1_SALE_COD,
      DWMS_CANALE_COMM_COD AS DWB1_LDB1_CANALE_COMM_COD,
      DWDC_OBS_ANNO_COD AS DWB1_LDB1_OBS_ANNO_COD,
      DWDC_OBS_STAG_COD AS DWB1_LDB1_OBS_STAG_COD,
      DWMJ_RETAIL_MNG_COD AS DWB1_LDB1_RETAIL_MNG_COD,
      DWB1_VARZ_DTA AS DWB1_LDB1_VARZ_DTA,
      DWNA_ORIG_ITA_LOC_VAL AS DWB1_LDB1_ORIG_ITA_LOC_VAL,
      DWR9_MARKETING_TYPE_COD AS DWB1_MARKETING_TYPE_COD,
      DWB1_ID_SCN_COLLEGATO_COD AS DWB1_ID_SCN_COLLEGATO_COD,
      DWB1_ID_RGH_COLLEGATO_COD AS DWB1_ID_RGH_COLLEGATO_COD,
      DWB1_CICLO_COLLEGATO_NUM AS DWB1_CICLO_COLLEGATO_NUM,
      DWB1_SCN_COLLEGATO_GG_DLTA_NUM AS DWB1_SCN_COLLEGATO_GG_DLTA_NUM
    FROM
      ${self()}
    WHERE
      DWB1_EMISSIONE_DTA > CURRENT_DATE() -20
  ) TDWB1 ON TDWB1.DWB1_LDB1_ID_SCN_COD = TLDB1.LDB1_ID_SCN_COD
  AND TDWB1.DWB1_LDB1_ID_RGH_COD = TLDB1.LDB1_ID_RGH_COD
  LEFT JOIN ${ref("TDWB1_ABBATTIMENTI_QUALITA_STDC")} ABBATTIMENTI_QUALITA_STDC ON ABBATTIMENTI_QUALITA_STDC.DWZ3_VALORE1_COD = TLDB1.LDB1_QUALITA_COD
  AND ABBATTIMENTI_QUALITA_STDC.DWZ3_VALORE2_COD = TLDB1.LDB1_STRUT_COMM_COD
  AND ABBATTIMENTI_QUALITA_STDC.DWZ3_A_DTA >= TLDB1.LDB1_EMISSIONE_DTA
  AND ABBATTIMENTI_QUALITA_STDC.DWZ3_DA_DTA <= TLDB1.LDB1_EMISSIONE_DTA
  LEFT JOIN ${ref("TDWB1_ABBATTIMENTI_QUALITA_STDG")} ABBATTIMENTI_QUALITA_STDG ON ABBATTIMENTI_QUALITA_STDG.DWZ3_VALORE1_COD = TLDB1.LDB1_QUALITA_COD
  AND ABBATTIMENTI_QUALITA_STDG.DWZ3_VALORE2_COD = TLDB1.LDB1_STRUT_COMM_COD
  AND ABBATTIMENTI_QUALITA_STDG.DWZ3_A_DTA >= TLDB1.LDB1_EMISSIONE_DTA
  AND ABBATTIMENTI_QUALITA_STDG.DWZ3_DA_DTA <= TLDB1.LDB1_EMISSIONE_DTA
  LEFT JOIN ${ref("TDWB1_ARTICOLI_COLORE")} ARTICOLI_COLORE ON ARTICOLI_COLORE.COD_ANN = TLDB1.LDB1_VND_ANNO_COD
  AND ARTICOLI_COLORE.COD_STAG = TLDB1.LDB1_VND_STAG_COD
  AND ARTICOLI_COLORE.COD_CLZ = TLDB1.LDB1_VND_CLZ_COD
  AND ARTICOLI_COLORE.COD_OGG = TLDB1.LDB1_ARTICOLO_COD
  AND ARTICOLI_COLORE.COD_CLRE = TLDB1.LDB1_COLORE_COD
  LEFT JOIN ${ref("TDWB1_PROFIT_NO_STATO")} PROFIT_NO_STATO ON PROFIT_NO_STATO.DWD1_NEGZ_COD = TLDB1.LDB1_NEGZ_COD
  AND TLDB1.LDB1_EMISSIONE_DTA >= PROFIT_NO_STATO.DWA2_DATA_DA_DTA
  AND TLDB1.LDB1_EMISSIONE_DTA < PROFIT_NO_STATO.DWA2_DATA_A_DTA
  LEFT JOIN ${ref("TDWB1_PROFIT_CENTER")} PROFIT_CENTER ON PROFIT_CENTER.DWD1_NEGZ_COD = TLDB1.LDB1_NEGZ_COD
  AND PROFIT_CENTER.DWF1_STATO_COD = TLDB1.LDB1_STATO_FATT_COD
  AND TLDB1.LDB1_EMISSIONE_DTA >= PROFIT_CENTER.DWA2_DATA_DA_DTA
  AND TLDB1.LDB1_EMISSIONE_DTA < PROFIT_CENTER.DWA2_DATA_A_DTA
  LEFT JOIN ${ref("TDWB1_TAXI_COD")} TAXI_COD ON TAXI_COD.DWD1_NEGZ_COD = TLDB1.LDB1_NEGZ_COD
  LEFT JOIN ${PARTITION.ref(ref("TDWG1_DEDUP_OP1_CST"), "ANG")} TDWG1_DEDUP_OP1_CST ON TDWG1_DEDUP_OP1_CST.DWG1_CLIENTE_COD = TLDB1.LDB1_CLIENTE_COD
  LEFT JOIN ${PARTITION.ref(ref("TDWD1_ANAG_NEGZ_ANG"), "ANG")} TDWD1 ON TLDB1.LDB1_NEGZ_COD = TDWD1.DWD1_NEGZ_COD
  LEFT JOIN ${PARTITION.ref(ref("TDWQ8_TIPO_UNIT_ANG"), "ANG")} TDWQ8 ON TDWQ8.DWQ8_TIPO_UNIT_COD = TDWD1.DWQ8_TIPO_UNIT_COD
  LEFT JOIN ${ref("TDWB1_LISTINI_PMPA")} LISTINI_PMPA ON LISTINI_PMPA.DWAJ_ANNO_COD = CAST(
    CASE
      WHEN format_date(
        "%m",
        DATE_SUB(
          DATE_TRUNC(LDB1_EMISSIONE_DTA, MONTH),
          INTERVAL 1 DAY
        )
      ) = "12" THEN EXTRACT(
        YEAR
        FROM
          TLDB1.LDB1_EMISSIONE_DTA
      ) -1
      ELSE EXTRACT(
        YEAR
        FROM
          TLDB1.LDB1_EMISSIONE_DTA
      )
    END AS STRING
  )
  AND LISTINI_PMPA.DWAJ_MESE_COD = CAST(
    format_date(
      "%m",
      DATE_SUB(
        DATE_TRUNC(LDB1_EMISSIONE_DTA, MONTH),
        INTERVAL 1 DAY
      )
    ) AS STRING
  )
  AND LISTINI_PMPA.DWD1_NEGZ_COD = TLDB1.LDB1_NEGZ_COD
  AND LISTINI_PMPA.DWD4_ARTICOLO_COD = TLDB1.LDB1_ARTICOLO_COD
  AND LISTINI_PMPA.DWM9_COLORE_COD = TLDB1.LDB1_COLORE_COD
  AND LISTINI_PMPA.DWZ4_QUALITA_COD = TLDB1.LDB1_QUALITA_COD
  LEFT JOIN ${ref("TDWB1_FLAG_PRIMO_SCONTRINO")} FLAG_PRIMO_SCONTRINO ON FLAG_PRIMO_SCONTRINO.FLAG_ID_SCN_COD = TDWB1.DWB1_LDB1_ID_SCN_COD
